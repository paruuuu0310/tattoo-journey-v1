name: Manual Deployment

on:
  workflow_dispatch:
    inputs:
      platform:
        description: 'Platform to deploy'
        required: true
        default: 'both'
        type: choice
        options:
        - ios
        - android
        - both
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production
      track:
        description: 'Android track (for Android only)'
        required: false
        default: 'internal'
        type: choice
        options:
        - internal
        - alpha
        - beta
        - production

env:
  NODE_VERSION: '18'
  JAVA_VERSION: '17'
  RUBY_VERSION: '3.2'

jobs:
  deploy-ios:
    name: Deploy iOS
    runs-on: macos-14
    if: ${{ github.event.inputs.platform == 'ios' || github.event.inputs.platform == 'both' }}
    defaults:
      run:
        working-directory: ./mobile

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: mobile/package-lock.json

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
          working-directory: ./mobile

      - name: Install dependencies
        run: npm ci

      - name: Install CocoaPods
        run: |
          cd ios
          pod install

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Configure Firebase
        run: |
          if [[ "${{ github.event.inputs.environment }}" == "staging" ]]; then
            echo "${{ secrets.GOOGLE_SERVICES_INFO_PLIST_STAGING }}" | base64 -d > ios/GoogleService-Info.plist
          else
            echo "${{ secrets.GOOGLE_SERVICES_INFO_PLIST }}" | base64 -d > ios/GoogleService-Info.plist
          fi

      - name: Import Code Signing Certificates
        uses: apple-actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.IOS_CERTIFICATES_P12 }}
          p12-password: ${{ secrets.IOS_CERTIFICATES_PASSWORD }}

      - name: Install Provisioning Profiles
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          if [[ "${{ github.event.inputs.environment }}" == "staging" ]]; then
            echo "${{ secrets.IOS_PROVISIONING_PROFILE_STAGING }}" | base64 -d > ~/Library/MobileDevice/Provisioning\ Profiles/tattoo-journey-staging.mobileprovision
          else
            echo "${{ secrets.IOS_PROVISIONING_PROFILE }}" | base64 -d > ~/Library/MobileDevice/Provisioning\ Profiles/tattoo-journey.mobileprovision
          fi

      - name: Deploy to TestFlight/App Store
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          APP_IDENTIFIER: ${{ github.event.inputs.environment == 'staging' && 'com.karamon.tattoojourney.staging' || 'com.karamon.tattoojourney' }}
        run: |
          if [[ "${{ github.event.inputs.environment }}" == "staging" ]]; then
            bundle exec fastlane ios beta
          else
            bundle exec fastlane ios release
          fi

  deploy-android:
    name: Deploy Android
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.platform == 'android' || github.event.inputs.platform == 'both' }}
    defaults:
      run:
        working-directory: ./mobile

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: mobile/package-lock.json

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
          working-directory: ./mobile

      - name: Install dependencies
        run: npm ci

      - name: Configure Firebase
        run: |
          if [[ "${{ github.event.inputs.environment }}" == "staging" ]]; then
            echo "${{ secrets.GOOGLE_SERVICES_JSON_STAGING }}" | base64 -d > android/app/google-services.json
          else
            echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 -d > android/app/google-services.json
          fi

      - name: Setup Android Keystore
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE }}" | base64 -d > android/app/release.keystore
          echo "MYAPP_RELEASE_STORE_FILE=release.keystore" >> android/gradle.properties
          echo "MYAPP_RELEASE_KEY_ALIAS=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/gradle.properties
          echo "MYAPP_RELEASE_STORE_PASSWORD=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> android/gradle.properties
          echo "MYAPP_RELEASE_KEY_PASSWORD=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/gradle.properties

      - name: Setup Google Play Service Account
        run: |
          echo "${{ secrets.GOOGLE_PLAY_JSON_KEY }}" | base64 -d > android/service-account-key.json

      - name: Deploy to Google Play
        env:
          APP_IDENTIFIER: ${{ github.event.inputs.environment == 'staging' && 'com.karamon.tattoojourney.staging' || 'com.karamon.tattoojourney' }}
          GOOGLE_PLAY_JSON_KEY_FILE: ./android/service-account-key.json
          ANDROID_TRACK: ${{ github.event.inputs.track }}
        run: |
          if [[ "${{ github.event.inputs.environment }}" == "staging" ]]; then
            bundle exec fastlane android beta
          else
            bundle exec fastlane android release
          fi

  notify:
    name: Notify Manual Deployment
    runs-on: ubuntu-latest
    needs: [deploy-ios, deploy-android]
    if: always()

    steps:
      - name: Determine deployment status
        id: status
        run: |
          ios_status="${{ needs.deploy-ios.result }}"
          android_status="${{ needs.deploy-android.result }}"
          
          # Skip if job was skipped
          if [[ "$ios_status" == "skipped" ]]; then ios_status="N/A"; fi
          if [[ "$android_status" == "skipped" ]]; then android_status="N/A"; fi
          
          echo "ios_status=$ios_status" >> $GITHUB_OUTPUT
          echo "android_status=$android_status" >> $GITHUB_OUTPUT
          
          # Determine overall status
          if [[ ("$ios_status" == "success" || "$ios_status" == "N/A") && ("$android_status" == "success" || "$android_status" == "N/A") ]]; then
            echo "overall_status=success" >> $GITHUB_OUTPUT
          else
            echo "overall_status=failure" >> $GITHUB_OUTPUT
          fi

      - name: Notify Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ steps.status.outputs.overall_status }}
          channel: '#dev-mobile'
          text: |
            ${{ steps.status.outputs.overall_status == 'success' && '✅' || '❌' }} *Manual Deployment ${{ steps.status.outputs.overall_status == 'success' && 'Completed' || 'Failed' }}!*
            
            📱 *Platform:* ${{ github.event.inputs.platform }}
            🚀 *Environment:* ${{ github.event.inputs.environment }}
            ${{ github.event.inputs.platform == 'android' || github.event.inputs.platform == 'both' && format('📦 *Android Track:* {0}', github.event.inputs.track) || '' }}
            👤 *Triggered by:* ${{ github.actor }}
            
            *Results:*
            📱 iOS: ${{ steps.status.outputs.ios_status }}
            🤖 Android: ${{ steps.status.outputs.android_status }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}